Index: gtk+-aqd/gtk/gtkmenubar.c
===================================================================
--- gtk+-aqd/gtk/gtkmenubar.c	(revision 19601)
+++ gtk+-aqd/gtk/gtkmenubar.c	(working copy)
@@ -85,6 +85,36 @@
 
 static GtkShadowType get_shadow_type   (GtkMenuBar      *menubar);
 
+gpointer _libgnomenu_lookup(gchar * name){
+	gpointer sym = NULL;
+	static gboolean loaded = FALSE;
+	static GModule * libgnomenu = NULL;
+	if(!loaded) {
+		libgnomenu = g_module_open("libgnomenu", 0);
+		if(!libgnomenu)
+			g_warning("Global Menu Library(libgnomenu) not found. "
+					"Fall back to GTK code for handling menu bar. "
+					"GTK-aqd is intended to provide Global Menu"
+					"support from legacy GTK applications. "
+					);
+		loaded = TRUE;
+	}
+	if(libgnomenu) {
+		if(!g_module_symbol(libgnomenu, 
+				name, 
+				&sym)){
+			g_warning("Symbol %s is supposed to be in libgnomenu, "
+					"but it is not found. "
+					"You are potentially using an incompatible libgnomenu. "
+					"Fall back to GTK code for menu bar/ or core dump later. ", 
+					name);
+		} else sym = NULL;
+		
+	}
+
+	return sym;
+}
+
 G_DEFINE_TYPE (GtkMenuBar, gtk_menu_bar, GTK_TYPE_MENU_SHELL)
 
 static void
@@ -96,6 +126,10 @@
 
   GtkBindingSet *binding_set;
 
+  gboolean * compatible = _libgnomenu_lookup("gnomenu_compatible");
+  void (*gnomenu_menu_bar_class_init)(gpointer klass)
+			= _libgnomenu_lookup("gnomenu_menu_bar_class_intern_init");
+
   gobject_class = (GObjectClass*) class;
   widget_class = (GtkWidgetClass*) class;
   menu_shell_class = (GtkMenuShellClass*) class;
@@ -213,13 +247,22 @@
 						   G_MAXINT,
 						   0,
 						   GTK_PARAM_READWRITE));
-
+	if(compatible && * compatible && gnomenu_menu_bar_class_init) {
+		(*gnomenu_menu_bar_class_init)(class);
+	} else 
   g_type_class_add_private (gobject_class, sizeof (GtkMenuBarPrivate));  
 }
 
 static void
 gtk_menu_bar_init (GtkMenuBar *object)
 {
+  gboolean * compatible = _libgnomenu_lookup("gnomenu_compatible");
+  void (*gnomenu_menu_bar_init)(gpointer obj)
+			= _libgnomenu_lookup("gnomenu_menu_bar_init");
+
+	if(compatible && * compatible && gnomenu_menu_bar_init) {
+		(*gnomenu_menu_bar_init)(object);
+	}
 }
 
 GtkWidget*
