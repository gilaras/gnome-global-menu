Index: gtk+-aqd/gtk/gtkmenubar.c
===================================================================
--- gtk+-aqd/gtk/gtkmenubar.c	(revision 19601)
+++ gtk+-aqd/gtk/gtkmenubar.c	(working copy)
@@ -85,8 +85,82 @@
 
 static GtkShadowType get_shadow_type   (GtkMenuBar      *menubar);
 
+gpointer _libgnomenu_lookup(gchar * name){
+	gpointer sym = NULL;
+	gboolean loaded = FALSE;
+	static GModule * libgnomenu = NULL;
+	if(!loaded) {
+		libgnomenu = g_module_open("libgnomenu", 0/*G_MODULE_BIND_LOCAL*/);
+		if(!libgnomenu)
+			g_warning("Global Menu Library not found");
+		loaded = TRUE;
+	}
+	if(libgnomenu) {
+		if(!g_module_symbol(libgnomenu, 
+				name, 
+				&sym)){
+			g_warning("%s not found", name);
+		}else 
+			g_warning("%s found at %p", 
+				name, sym);
+		
+	}
+
+	return sym;
+}
+/*fool every other app*/
+#undef gtk_menu_bar_get_type
+#define gtk_menu_bar_get_type _gtk_menu_bar_get_type
 G_DEFINE_TYPE (GtkMenuBar, gtk_menu_bar, GTK_TYPE_MENU_SHELL)
+#undef gtk_menu_bar_get_type
+#define gtk_menu_bar_get_type IA__gtk_menu_bar_get_type
 
+GType
+gtk_old_menu_bar_get_type(void){
+  static GType old_type_id = 0; 
+  if (G_UNLIKELY (old_type_id == 0)) 
+	{ 
+	  static const GTypeInfo g_define_type_info = { 
+		sizeof (GtkMenuBarClass), 
+		(GBaseInitFunc) NULL, 
+		(GBaseFinalizeFunc) NULL, 
+		(GClassInitFunc) gtk_menu_bar_class_intern_init, 
+		(GClassFinalizeFunc) NULL, 
+		NULL,   /* class_data */ 
+		sizeof (GtkMenuBar), 
+		0,      /* n_preallocs */ 
+		(GInstanceInitFunc) gtk_menu_bar_init, 
+	  }; 
+	  old_type_id = g_type_register_static (GTK_TYPE_MENU_SHELL, "GtkOldMenuBar", &g_define_type_info, 0); 
+	} 
+  return old_type_id; 
+}
+
+GType
+gtk_menu_bar_get_type (void)
+{
+  GType g_define_type_id = 0; 
+  static gboolean *gnomenu_compatible = NULL;
+  static gboolean loaded = FALSE;
+  static GType (*get_type)(void) = NULL;
+  static GType *type = NULL;
+  if(G_UNLIKELY(!loaded)){
+	gnomenu_compatible = _libgnomenu_lookup("gnomenu_compatible");
+	type = _libgnomenu_lookup("gnomenu_menu_bar_type");
+	get_type = _libgnomenu_lookup("gnomenu_menu_bar_get_type");
+	loaded = TRUE;
+  }
+  if(gnomenu_compatible && *gnomenu_compatible && type && get_type){ 
+	if(*type) 
+      g_define_type_id = get_type();
+	else 
+      g_define_type_id = gtk_old_menu_bar_get_type();
+  } else 
+	g_define_type_id = _gtk_menu_bar_get_type();
+
+  return g_define_type_id; 
+}
+
 static void
 gtk_menu_bar_class_init (GtkMenuBarClass *class)
 {
